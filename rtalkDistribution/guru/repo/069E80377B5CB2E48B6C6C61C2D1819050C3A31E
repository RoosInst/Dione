T0NCHU:INFOname=RTALK TestsnameSpace=rtalkdate=2016-06-02.11.55.18.0000author=nonetitle=RTALK Testingrid=GAKRE8CABO1Z1U00version=1subVersion=41type=rtbootparser=v2:LICENSECopyright (c) ,  all rights reserved:CLASSESclass,super=Object,type=named,class=RtTestCases,modified=716508254,varCnt=3,instanceVariableNames=test1;test2;test4class,super=RtTestCases,type=named,class=GuruFileTests,modified=771276325,varCnt=3class,super=RtTestCases,type=named,class=RtTestCompiler,modified=705530802,varCnt=3,classVariableNames=CompilerTestclass,super=RtTestCases,type=named,class=RtBenchmarks,modified=716508213,varCnt=4,instanceVariableNames=test3:METHODSclass,class=RtTestCases,selector=runAllTests,codeType=rtalk,modified=705504949,pbc=0600000201002C012601180101230124020200000027230210000D616C6C537562636C6173736573240202000000332302100103646F3A240223011E05010100002301240323032601250124030200000014230310000872756E5465737473240323031Eclass,class=RtTestCases,selector=runTests,codeType=rtalk,modified=705503328,pbcclass,class=RtTestCompiler,selector=fromConstantString:,codeType=rtalk,modified=706097946,pbc=0401000023012403020000000423031000096173496E7465676572240323031Eclass,class=RtBenchmarks,selector=runBenchmarks,codeType=rtalk,modified=710577079,pbcclass,class=RtBenchmarks,selector=runTests,codeType=rtalk,modified=710576098,pbc=0400000023011Einstance,class=RtTestCompiler,selector=doesNotUnderstand:,codeType=rtalk,modified=710294701,pbc=04010000230224030200000004230310000A737570706F7274446E75240323031Einstance,class=RtTestCompiler,selector=testDoesNotUnderstand,codeType=rtalk,modified=710294598,pbc=0400000023012402020000000423021000056973466F6F240223020A012C03240223021E010140033435302301240202000000242302100007646E75546573742402020000003023021001013D2402230209022C03240223021E01022C02240223021Einstance,class=RtTestCompiler,selector=testClassVar,codeType=rtalk,modified=745205187,pbc=040000004005317465737424022301400F33527454657374436F6D70696C6572400D33436F6D70696C65725465737423021504117072696D436C61737356617241745075740030400531746573742301400F33527454657374436F6D70696C6572400D33436F6D70696C65725465737415030F7072696D476574436C617373566172002402020000002523021001013D240223021Einstance,class=RtTestCompiler,selector=testPrimArgOrder,codeType=rtalk,modified=705946268,pbc=04000001400234314002343240023433400234342301240202000000102302100413737570706F7274446F3A646F3A646F3A646F3A2402230224044002343223042402020000002723021001013D240223021Einstance,class=RtTestCompiler,selector=testTryCatch,codeType=rtalk,modified=713258618,pbcinstance,class=RtTestCompiler,selector=testConditionals,codeType=rtalk,modified=705946231,pbcinstance,class=RtTestCompiler,selector=testArrays,codeType=rtalk,modified=705504501,pbc=0400000140000000000C433435093530093535093635240223022404400334353540023433230424020200000017230210010361743A2402020000002323021001013D2402230209012C03240223021E010140000000000F4435362E390936302E310936352E3624022302240440053536302E3140023432230424020200000053230210010361743A2402020000005F23021001013D2402230209022C03240223021E010240000000000C4174657374096974096E6F772402230224044004316E6F774002343323042402020000008F230210010361743A2402020000009B23021001013D2402230209032C03240223021E01034000000000094538360936350938372402230224044003363837400234332304240202000000CB230210010361743A240202000000D723021001013D2402230209042C03240223021E010440000000000F4273796D310973796D320973796D3324022302240440053373796D3340023433230424020200000107230210010361743A2402020000011323021001023D3D2402230209052C03240223021E01052C02240223021Einstance,class=RtTestCompiler,selector=testReturnInBlock,codeType=rtalk,modified=705504262,pbc=0600000281001800012301240202000000132302100115737570706F727452657475726E496E426C6F636B3A2402230226014005343133343525012402020000002A23021001013D240223021E05010080002C02240223021Finstance,class=RtTestCompiler,selector=testBigInts,codeType=rtalk,modified=745207362,pbcinstance,class=RtTestCompiler,selector=testFloatOps,codeType=rtalk,modified=705508455,pbc=04000001400435302E30240223022404400435322E3023042402020000001023021001012B240223022404400435342E3023042402020000002723021001012F240223022404400435332E3223042402020000003E23021001012A240223022404400535352E353523042402020000005523021001012D2402230224044006352D332E393523042402020000006C23021001012D240223022404400835312E30652D313523042402020000008323021000036162732402020000008F23021001013C240223021Einstance,class=RtTestCompiler,selector=testIntegerOps,codeType=rtalk,modified=705459458,pbc=04000001400234302402230224044002343223042402020000001023021001012B240223022404400334353023042402020000002723021001012A2402230224044002343523042402020000003E23021001012F2402230224044002343523042402020000005523021001012D240223022404400334313523042402020000006C23021001013D240223021Einstance,class=RtTestCompiler,selector=supportReturnInBlock:,codeType=rtalk,modified=705504221,pbc=04010000230124030200000004230310000576616C756524034003343435240323031Einstance,class=RtTestCompiler,selector=testBlock1,codeType=rtalk,modified=705504051,pbc=06000003010018000124022302260125012402020000001A230210000576616C75652402230226024005343132333425022402020000003123021001013D240223021E050100000040053431323334240223021Einstance,class=RtTestCompiler,selector=testDoubleLoop,codeType=rtalk,modified=706097777,pbc=040000052C01240540023430240223022404400234313124064002343524070801010223062402230224054003343530312408080301044002343123042402020000003123021001012B24022302240440023431230802000000461001012D31240801034002343002000000561001023E3D240223020A0423064002343102000000691001012B3124060101230702000000781001013C240223020A0240043432353023042402020000008D23021001013D240223021Einstance,class=RtTestCompiler,selector=testExponent,codeType=rtalk,modified=706097720,pbc=04000001400835302E3030303031240223022404400835302E303030303123042402020000001023021001013D240223021Einstance,class=RtTestCompiler,selector=toConstantString,codeType=rtalk,modified=706097929,pbc=040000004003313435240223021Einstance,class=RtTestCompiler,selector=testToDo,codeType=rtalk,modified=705502825,pbc=040000042C012405400234302402230224044002343531240640033431302407080101022306240223022405230523042402020000002623021001012B240223022404230640023431020000003B1001012B31240601012307020000004A1001013C240223020A02400334343523042402020000005F23021001013D240223021Einstance,class=RtTestCompiler,selector=testTimesRepeat,codeType=rtalk,modified=705459542,pbc=040000024002343024022302240440023435312405080101024002343123042402020000001A23021001012B240223022404400234312305020000002F1001012D312405010140023430020000003F1001023E3D240223020A024002343523042402020000005423021001013D240223021Einstance,class=RtTestCompiler,selector=supportDnu,codeType=rtalk,modified=710294663,pbc=040000004003343530240223021Einstance,class=RtTestCompiler,selector=supportDo:do:do:do:,codeType=rtalk,modified=726119629,pbc=0404000016040C7072696D446F446F446F446F0A2F4D6973635072696D73230524060200000004230610000F7072696D69746976654661696C6564240623061Einstance,class=RtTestCompiler,selector=testGlobals,codeType=rtalk,modified=745203062,pbc=040000014007384F626A65637424044007334F626A6563744008385274436C6173732402020000000D2302100109676574436C6173733A2402230223042402020000001F23021001023D3D240223021Einstance,class=GuruFileTests,selector=testReadCff,codeType=rtalk,modified=771564350,pbcinstance,class=GuruFileTests,selector=testReadFile,codeType=rtalk,modified=771635725,pbcinstance,class=GuruFileTests,selector=testReadStream,codeType=rtalk,modified=771564370,pbcinstance,class=GuruFileTests,selector=testByteStream,codeType=rtalk,modified=771635224,pbcinstance,class=RtBenchmarks,selector=testSenders,codeType=rtalk,modified=833741266,pbcinstance,class=RtBenchmarks,selector=supportJavaHanoi:,codeType=rtalk,modified=726031334,pbc=0401000016010E62656E63686D61726B48616E6F690A2F4D6973635072696D7323021Einstance,class=RtBenchmarks,selector=supportLoop:,codeType=rtalk,modified=705504817,pbc=0401000323012403230324054002343024032303240740023431240323032406080101022306230524030200000024230310010361743A2403230324074002343123062403020000003B23031001012B24032303240601014008343130303030303023062403020000005423031001023C3D2403230309022307240323031Einstance,class=RtBenchmarks,selector=supportFib:,codeType=rtalk,modified=716749950,pbc=040100024002343223012403020000000723031001013C240323030A012301240308020101230224054002343123012403020000002A23031001012D2403230323052403020000003C230310010B737570706F72744669623A240323032405230224064002343223012403020000005723031001012D24032303230624030200000069230310010B737570706F72744669623A2403230323052403020000007B23031001012B2403010223031Einstance,class=RtBenchmarks,selector=supportHanoiMove:from:to:temp:,codeType=rtalk,modified=705503971,pbc=040400014002343123012406020000000723061001023D3D240623060A012305240623061E0101230524084002343123012406020000002B23061001012D24062306230223042303230824060200000043230610041E737570706F727448616E6F694D6F76653A66726F6D3A746F3A74656D703A2406230824084002343123012406020000005A23061001012D24062306230423032302230824060200000072230610041E737570706F727448616E6F694D6F76653A66726F6D3A746F3A74656D703A240623051Einstance,class=RtBenchmarks,selector=testMonomorphic,codeType=rtalk,modified=833741663,pbcinstance,class=RtBenchmarks,selector=testLoopMutable,codeType=rtalk,modified=833741141,pbcinstance,class=RtBenchmarks,selector=testGuruParse,codeType=rtalk,modified=833741493,pbc=0600000981012C0126012C01260440073852694775727524020200000005230210000B6E657753656C6563746F72240223022603400A3152695061636B61676540043163666625032402020000001F230210020D636C6173733A666F726D61743A24024013315254414C4B204261736520436C617373657325032402020000003223021001067469746C653A24024019315374617274696E6720477572752050617273652054657374230124020200000045230210010972694C6F674D73673A240218000140053854696D65240202000000CC23021001126D696C6C697365636F6E6473546F52756E3A240223022605230124042505240202000000E423021000086173537472696E672402230240193120204F70656E204F626A6563742054696D6520286D732920240202000000F723021001012C24022302230424020200000109230210010972694C6F674D73673A240218000240053854696D652402020000014823021001126D696C6C697365636F6E6473546F52756E3A24022302260623012404400E312065787065637465642032383025062402020000016323021000086173537472696E6724022302401331202050617273652054696D6520286D7329202402020000017623021001012C2402020000018223021001012C24022302230424020200000194230210010972694C6F674D73673A240218000340053854696D65240202000001C023021001126D696C6C697365636F6E6473546F52756E3A24022302260723012404400E31206578706563746564203436352507240202000001DB23021000086173537472696E67240223024015312020436F6E766572742054696D6520286D732920240202000001EE23021001012C240202000001FA23021001012C2402230223042402020000020C230210010972694C6F674D73673A2402250725062402020000021E23021001012B240223021E0501008000250340073852694775727524020200000060230210010B6F70656E4F626A6563743A240223022601250124020200000074230210000569734E696C2402020000008023021000036E6F74240223020A0125012402020000009423021000076973456D707479240202000000A023021000036E6F74240201012302090240023430240223021F080301022C012402010323021E05020080002501400A38527443666646696C652402020000012423021001036F6E3A24020200000130230210001567656E65726174655061726167726170685472656524022302260423021E05030080002504240202000001AC2302100016636F6E76657274416C6C546F4D756C74696C696E6573240223021Einstance,class=RtBenchmarks,selector=testFib,codeType=rtalk,modified=833741377,pbcinstance,class=RtBenchmarks,selector=testHanoi,codeType=rtalk,modified=833741217,pbcinstance,class=RtBenchmarks,selector=testLoop,codeType=rtalk,modified=833741118,pbcinstance,class=RtBenchmarks,selector=supportLoopMutable:,codeType=rtalk,modified=705504797,pbc=040100032301240323032405400234302403230324074002343124030200000016230310000A6E65774D757461626C65240323032406080101022306230524030200000030230310010361743A24032303240740023431230624030200000047230310010A696E6372656D656E743A240301014008343130303030303023062403020000005C23031001023C3D2403230309022307240323031Einstance,class=RtBenchmarks,selector=minTime:,codeType=rtalk,modified=716750884,pbc=0601000401002C0126022301260340023431250324030200000007230310010361743A2403230326011801012503240302000000562303100103646F3A24032501240323031E05010100002301240323032602250125022403020000002D23031001013C240323030A012502240323032601080201012C012403010223031Einstance,class=RtBenchmarks,selector=testPolymorphic,codeType=rtalk,modified=833741171,pbcinstance,class=RtBenchmarks,selector=testJavaHanoi,codeType=rtalk,modified=833741088,pbc=0600000441032C0126012C01260323012604400334313040063841727261792402020000000823021001046E65773A240223022602401B315374617274696E67204A6176612048616E6F692032352031305823012402020000001F230210010972694C6F674D73673A2402400234313124044003343130240508010102230424022302260325022406250318000140053854696D652402020000006B23021001126D696C6C697365636F6E6473546F52756E3A2402230223062402020000007D230210020761743A7075743A2402230440023431020000008E1001012B31240401012305020000009D1001013C240223020A0225022301240202000000B123021001086D696E54696D653A24022302260123012404400E31206578706563746564203233352501240202000000CC23021000086173537472696E6724022302400D31202054696D6520286D732920240202000000DF23021001012C240202000000EB23021001012C240223022304240202000000FD230210010972694C6F674D73673A24022501240223021E050100400040033432352504240202000000572302100111737570706F72744A61766148616E6F693A240223021E:SOURCE,type=classMethod,class=RtTestCases,selector=runAllTests,codeType=rtalkrunAllTests                "<modified:sys=GAKRE8CA,time=05/10/12 at 01:35:49 pm>   "                     "run all of the tests in subclasses"                 self allSubclasses do:[ :sc |                     sc runTests]            :SOURCE,type=classMethod,class=RtTestCases,selector=runTests,codeType=rtalkrunTests                "<modified:sys=GAKRE8CA,time=05/10/12 at 01:08:48 pm>   "                "<modified:sys=GAKRE8CA,time=05/10/12 at 12:49:43 am>   "                     "run the tests in this class.                     all methods which start with 'test'  each                 returns a boolean"                 | inst result fails passes |                 self riLogMsg:'Testing ',self name.                 fails := passes := 0.                 inst := self new.                 self methodDictionary keys do:[ :k |                     (k asString copyFrom:1 to:4) = 'test'                         ifTrue:[ (inst perform:k)                                         ifTrue:[passes := passes + 1]                                         ifFalse:[fails := fails + 1.                                                     self riLogMsg:'Failed ',self name,'  ',k]]].                 self riLogMsg:'Passed ',(passes asString).                 self riLogMsg:'Failed ',(fails asString).            :SOURCE,type=classMethod,class=RtTestCompiler,selector=fromConstantString:,codeType=rtalkfromConstantString: aString                "<modified:sys=GAKRE8CA,time=05/17/12 at 10:19:06 am>   "                "<modified:sys=GAKRE8CA,time=05/17/12 at 10:17:39 am>   "                     "used to test generic constants"                 ^aString asInteger            :SOURCE,type=classMethod,class=RtBenchmarks,selector=runBenchmarks,codeType=rtalkrunBenchmarks                "<modified:sys=GAKRE8CA,time=07/07/12 at 09:35:55 pm>   "                "<modified:sys=GAKRE8CA,time=07/07/12 at 09:22:04 pm>   "                     "run the tests in this class.                     all methods which start with 'test'  each                 returns a boolean"                 | inst result total |                 total := 0.                 inst := self new.                 self methodDictionary keys do:[ :k |                     (k asString copyFrom:1 to:4) = 'test'                         ifTrue:[              					total := total + (inst perform:k)]].                 self riLogMsg:'Total time (ms) ',(total asString).             	^total            :SOURCE,type=classMethod,class=RtBenchmarks,selector=runTests,codeType=rtalkrunTests                "<modified:sys=GAKRE8CA,time=07/07/12 at 09:19:34 pm>   "                     "skip this here"            :SOURCE,type=instanceMethod,class=RtTestCompiler,selector=doesNotUnderstand:,codeType=rtalkdoesNotUnderstand:aMessage                "<modified:sys=GAKRE8CA,time=07/04/12 at 03:10:00 pm>   "                     "reroute the dnu test"                 ^self supportDnu            :SOURCE,type=instanceMethod,class=RtTestCompiler,selector=testDoesNotUnderstand,codeType=rtalktestDoesNotUnderstand                "<modified:sys=GAKRE8CA,time=07/04/12 at 03:08:17 pm>   "                     "comment"                	self isFoo  ifTrue:[^false].               	self dnuTest = 50 ifFalse:[^false].             	^true            :SOURCE,type=instanceMethod,class=RtTestCompiler,selector=testClassVar,codeType=rtalktestClassVar                "<modified:pgmr=mdr,time=08/12/13 at 06:26:27 pm>   "                    "comment "                 CompilerTest := 'test'.                 ^CompilerTest = 'test'            :SOURCE,type=instanceMethod,class=RtTestCompiler,selector=testPrimArgOrder,codeType=rtalktestPrimArgOrder                "<modified:sys=GAKRE8CA,time=05/15/12 at 04:11:08 pm>   "                "<modified:sys=GAKRE8CA,time=05/10/12 at 03:03:23 pm>   "                "<modified:sys=GAKRE8CA,time=05/10/12 at 01:03:08 pm>   "                     "comment"                 | val |                 val := self supportDo:1 do:2 do:3 do:4.                 ^val = 2            :SOURCE,type=instanceMethod,class=RtTestCompiler,selector=testTryCatch,codeType=rtalktestTryCatch                "<modified:pgmr=mdr,time=08/07/12 at 11:24:09 pm>   "                "<modified:pgmr=mdr,time=08/05/12 at 09:47:51 pm>   "                     "comment"             	^([	[ 1 + 2.              		5 throw:#foo]              	tryCatch:(RtExceptionHandler new on:#test do:[:a | 6 + a])]             		tryCatch:(RtExceptionHandler new on:#foo do:[22])) = 22            :SOURCE,type=instanceMethod,class=RtTestCompiler,selector=testConditionals,codeType=rtalktestConditionals                "<modified:sys=GAKRE8CA,time=05/15/12 at 04:10:31 pm>   "                     "comment"                 | rt |                 5 = 4                     ifTrue:[rt := 3]                     ifFalse:[rt := 4].                 rt = 4 ifFalse:[^false].                 5 = 4                     ifFalse:[rt := 3]                     ifTrue:[rt := 4].                 rt = 3 ifFalse:[^false].                 rt := true ifTrue:[14] ifFalse:[15].                 rt = 14 ifFalse:[^false].                 false ifTrue:[rt := 3].                 ^rt = 14            :SOURCE,type=instanceMethod,class=RtTestCompiler,selector=testArrays,codeType=rtalktestArrays                "<modified:sys=GAKRE8CA,time=05/10/12 at 01:28:21 pm>   "                "<modified:sys=GAKRE8CA,time=05/10/12 at 01:27:00 pm>   "                     "comment"                 |a|                 a := #(45 50 55 65).                 ((a at:3) = 55) ifFalse:[^false].                 a := #(56.9  60.1 65.6).                 ((a at:2) = 60.1) ifFalse:[^false].                 a := #('test' 'it' 'now').                 ((a at:3) = 'now') ifFalse:[^false].                 a := #($V $A $W).                 ((a at:3) = $W) ifFalse:[^false].                 a := #(sym1 sym2 sym3).                 ((a at:3) == #sym3) ifFalse:[^false].                 ^true            :SOURCE,type=instanceMethod,class=RtTestCompiler,selector=testReturnInBlock,codeType=rtalktestReturnInBlock                "<modified:sys=GAKRE8CA,time=05/10/12 at 01:24:22 pm>   "                "<modified:sys=GAKRE8CA,time=05/10/12 at 01:22:49 pm>   "                     "comment"                     " return in block test"                 | a |                 a := self supportReturnInBlock:[^true].                 ^a = 1345            :SOURCE,type=instanceMethod,class=RtTestCompiler,selector=testBigInts,codeType=rtalktestBigInts               "<modified:pgmr=mdr,time=08/12/13 at 07:02:42 pm>   "                    "check conversion to from "            	| int |            	int := 9223372036854775807.            	(int class == Integer) ifFalse:[^false].            	((int + 1)class == BigInteger) ifFalse:[^false].            	((int + 1 - 1)class == Integer) ifFalse:[^false].            	((int * 2)class == BigInteger) ifFalse:[^false].            	((int // 3)class == Integer) ifFalse:[^false].            	^true            :SOURCE,type=instanceMethod,class=RtTestCompiler,selector=testFloatOps,codeType=rtalktestFloatOps                "<modified:sys=GAKRE8CA,time=05/10/12 at 02:34:15 pm>   "                "<modified:sys=GAKRE8CA,time=05/10/12 at 12:55:30 am>   "                "<modified:sys=GAKRE8CA,time=05/10/12 at 12:50:05 am>   "                "<modified:sys=GAKRE8CA,time=08/19/11 at 02:17:31 pm>   "                     "comment"                 | a |                 a := 0.0.                 a  := a + 2.0.                 a := a / 4.0.                 a := a * 3.2.                 a := a - 5.55.                 a := a - -3.95.                 ^ a abs < 1.0e-15            :SOURCE,type=instanceMethod,class=RtTestCompiler,selector=testIntegerOps,codeType=rtalktestIntegerOps                "<modified:sys=GAKRE8CA,time=05/10/12 at 12:57:38 am>   "                "<modified:sys=GAKRE8CA,time=05/10/12 at 12:50:05 am>   "                "<modified:sys=GAKRE8CA,time=08/19/11 at 02:17:31 pm>   "                     "comment"                 | a |                 a := 0.                 a  := a + 2.                 a := a * 50.                 a := a / 5.                 a := a - 5.                 ^ a = 15            :SOURCE,type=instanceMethod,class=RtTestCompiler,selector=supportReturnInBlock:,codeType=rtalksupportReturnInBlock:aBlock                "<modified:sys=GAKRE8CA,time=05/10/12 at 01:23:41 pm>   "                "<modified:sys=GAKRE8CA,time=05/10/12 at 01:22:49 pm>   "                     "comment"                     " return in block test"                 aBlock value.                 ^45            :SOURCE,type=instanceMethod,class=RtTestCompiler,selector=testBlock1,codeType=rtalktestBlock1                "<modified:sys=GAKRE8CA,time=05/10/12 at 01:20:51 pm>   "                     "comment"                 | a b |                 a := [1234].                 b := a value.                 ^b = 1234            :SOURCE,type=instanceMethod,class=RtTestCompiler,selector=testDoubleLoop,codeType=rtalktestDoubleLoop                "<modified:sys=GAKRE8CA,time=05/17/12 at 10:16:17 am>   "                 | a |                 a := 0.                 1 to:5                      do:[ :i | 50 timesRepeat:[a := a + 1]].                 ^ a = 250            :SOURCE,type=instanceMethod,class=RtTestCompiler,selector=testExponent,codeType=rtalktestExponent                "<modified:sys=GAKRE8CA,time=05/17/12 at 10:15:20 am>   "                     "comment "                 | a |                 a := 1e-5.                 ^ a = 1.0e-5            :SOURCE,type=instanceMethod,class=RtTestCompiler,selector=toConstantString,codeType=rtalktoConstantString                "<modified:sys=GAKRE8CA,time=05/17/12 at 10:18:49 am>   "                     "returns a string representing self"                 ^'45'            :SOURCE,type=instanceMethod,class=RtTestCompiler,selector=testToDo,codeType=rtalktestToDo                "<modified:sys=GAKRE8CA,time=05/10/12 at 01:00:25 pm>   "                     "comment"                 | val |                 val := 0.                 5 to:10 do:[ :a | val := val + a].                 ^val = 45            :SOURCE,type=instanceMethod,class=RtTestCompiler,selector=testTimesRepeat,codeType=rtalktestTimesRepeat                "<modified:sys=GAKRE8CA,time=05/10/12 at 12:59:02 am>   "                     "comment"                 | val |                 val := 0.                 5 timesRepeat:[ val := val + 1].                 ^val = 5            :SOURCE,type=instanceMethod,class=RtTestCompiler,selector=supportDnu,codeType=rtalksupportDnu                "<modified:sys=GAKRE8CA,time=07/04/12 at 03:09:22 pm>   "                     "reroute the dnu test"                 ^50            :SOURCE,type=instanceMethod,class=RtTestCompiler,selector=supportDo:do:do:do:,codeType=rtalksupportDo:arg1 do:arg2 do:arg3 do:arg4                "<modified:pgmr=mdr,time=01/03/13 at 07:53:48 pm>   "                     "arg order test"             	<jprim: /MiscPrims primDoDoDoDo>                 ^self primitiveFailed            :SOURCE,type=instanceMethod,class=RtTestCompiler,selector=testGlobals,codeType=rtalktestGlobals                "<modified:pgmr=mdr,time=08/12/13 at 05:51:02 pm>   "                    "comment "                 ^Object == (RtClass getClass:#Object)            :SOURCE,type=instanceMethod,class=GuruFileTests,selector=testReadCff,codeType=rtalktestReadCff              "<modified:pgmr=mdr,time=06/13/14 at 08:25:51 pm>   "               "comment"           	| attr file lines|           	attr := RiGuru newSelector.                                                              	attr name:'RtalkExt'.            	lines := 0.           	self riLogMsg:(Time nanosecondsToRun:[file := RtCffFile on:(RiGuru openObject: attr)]) / 1000000.0.           	self riLogMsg:(Time nanosecondsToRun:[ [file atEnd] whileFalse:[ lines := lines + 1. file nextLine]]) / 1000000.0.           	self riLogMsg:lines.           	file reset.           	lines := 0.           	self riLogMsg:(Time nanosecondsToRun:[ [file atEnd] whileFalse:[ lines := lines + 1. file readNextMultiLine]]) / 1000000.0.           	self riLogMsg:lines.           	self riLogMsg:file checksum.       :SOURCE,type=instanceMethod,class=GuruFileTests,selector=testReadFile,codeType=rtalktestReadFile              "<modified:pgmr=mdr,time=06/14/14 at 04:15:25 pm>   "            "reads a 2 meg file into a stream"           	| attr file lines|           	attr := RiGuru newSelector.                                                              	attr name:'RtalkExt'.            	lines := 0.           	self riLogMsg:(Time nanosecondsToRun:[file := RiGuru cffReadStreamWithAttributes:attr]) / 1000000.0.           	self riLogMsg:(Time nanosecondsToRun:[ [file atEnd] whileFalse:[ lines := lines + 1. file nextLine]]) / 1000000.0.           	self riLogMsg:lines.           	lines := 0.           	file reset.           	self riLogMsg:(Time nanosecondsToRun:[ [file atEnd] whileFalse:[ lines := lines + 1. file readNextMultiLine]]) / 1000000.0.           	self riLogMsg:lines.           	self riLogMsg:file checksum.    :SOURCE,type=instanceMethod,class=GuruFileTests,selector=testReadStream,codeType=rtalktestReadStream              "<modified:pgmr=mdr,time=06/13/14 at 08:26:10 pm>   "               "comment"           	| attr file lines|           	attr := RiGuru newSelector.                                                              	attr name:'RtalkExt'.            	lines := 0.           	self riLogMsg:(Time nanosecondsToRun:[file := ByteStream on:(RiGuru openObject: attr )contents]) / 1000000.0.           	self riLogMsg:(Time nanosecondsToRun:[ [file atEnd] whileFalse:[ lines := lines + 1. file nextLine]]) / 1000000.0.           	self riLogMsg:lines.       :SOURCE,type=instanceMethod,class=GuruFileTests,selector=testByteStream,codeType=rtalktestByteStream         "<modified:pgmr=mdr,time=06/14/14 at 04:07:04 pm>   "            "check that byte stream is working as expected"      	| stm next index|      	stm := ByteStream on:('testing byte stream' asByteArray).      	index := 0.      	[stm atEnd]      		whileFalse:[ index := index + 1.      					 next := stm next].      	index = 19 ifFalse:[^false].      	next = 109 ifFalse:[^false].           	stm := ByteStream on:(ByteArray new:5).     	stm setLimits;truncate.     	stm nextPutAll:'test'.     	stm writeLimit = 5 ifFalse:[^false].      	stm readLimit = 4 ifFalse:[^false].      	stm position = 4 ifFalse:[^false].      	stm nextPutAll:'Foo'.      	stm writeLimit = 13 ifFalse:[^false].      	stm readLimit = 7 ifFalse:[^false].      	stm position = 7 ifFalse:[^false].      	self riLogMsg:stm contents asString.     	^true    :SOURCE,type=instanceMethod,class=RtBenchmarks,selector=testSenders,codeType=rtalktestSenders                "<modified:pgmr=mdr,time=06/02/16 at 11:47:46 am>   "         "comment"                 | bytes pos sum time times |             	times := Array new:5.             	self riLogMsg:'Starting Senders (ms)'.                 1 to:5 do:[ :i |                     times at:i put:(Time millisecondsToRun:[Object sendersOf:#foo])].             	time := (self minTime:times).             	self riLogMsg:'  Time (ms) ',(time asString), ' expected 1100'.                 ^time :SOURCE,type=instanceMethod,class=RtBenchmarks,selector=supportJavaHanoi:,codeType=rtalksupportJavaHanoi:aInt                "<modified:pgmr=mdr,time=01/02/13 at 07:22:20 pm>   "                     "aInt number of disks return the time in ms"             	<jprim: /MiscPrims benchmarkHanoi >            :SOURCE,type=instanceMethod,class=RtBenchmarks,selector=supportLoop:,codeType=rtalksupportLoop:aByteArray                "<modified:sys=GAKRE8CA,time=05/10/12 at 01:33:37 pm>   "                "<modified:sys=GAKRE8CA,time=05/10/12 at 01:33:03 pm>   "                "<modified:sys=GAKRE8CA,time=02/02/12 at 02:40:30 pm>   "                "<modified:sys=GAKRE8CA,time=01/30/12 at 07:43:44 pm>   "                "<modified:sys=GAKRE8CA,time=01/30/12 at 11:15:48 am>   "                     "takes about 7-9ms"                 | bytes pos sum |                 bytes := aByteArray.                 sum := 0.                 pos := 1.                 [pos <= 1000000]    whileTrue:[                     sum := bytes at:pos.                     pos := pos + 1].                 ^sum            :SOURCE,type=instanceMethod,class=RtBenchmarks,selector=supportFib:,codeType=rtalksupportFib:aInt                "<modified:pgmr=mdr,time=09/17/12 at 10:12:32 am>   "             		"comment"             	^aInt < 2             		ifTrue:[aInt]             		ifFalse:[ (self supportFib:(aInt - 1) )+ (self supportFib:(aInt - 2))]            :SOURCE,type=instanceMethod,class=RtBenchmarks,selector=supportHanoiMove:from:to:temp:,codeType=rtalksupportHanoiMove: numberOfDisks from: source to: dest temp: temp                "<modified:sys=GAKRE8CA,time=05/10/12 at 01:19:31 pm>   "                "<modified:sys=GAKRE8CA,time=05/10/12 at 01:18:59 pm>   "                "<modified:sys=GAKRE8CA,time=06/28/11 at 04:39:33 pm>   "                     numberOfDisks == 1 ifTrue: [^self].                     self                             supportHanoiMove: numberOfDisks - 1 from: source to: temp temp: dest;                             supportHanoiMove: numberOfDisks - 1 from: temp to: dest temp: source            :SOURCE,type=instanceMethod,class=RtBenchmarks,selector=testMonomorphic,codeType=rtalktestMonomorphic     "<modified:pgmr=mdr,time=06/02/16 at 11:54:23 am>   "         "tests the speed of polymorphic sends"      | array t1|  	array := Array new:100.  	1 to:100 do:[ :i | array at:i put:(Array with:'foobar' with:nil)].  	self riLogMsg:'Starting monomorphic test'.    	10 timesRepeat:[  	1 to:100 do:[ :i |   		((array at:1) at:1) isNil  			ifFalse:[(array at:1) at:2 put:((array at:1) at:1)deepCopy]]].               	t1 := Time millisecondsToRun:[  	100 timesRepeat:[  	1 to:100 do:[ :i |   		((array at:1) at:1) isNil  			ifFalse:[(array at:1) at:2 put:((array at:1) at:1)deepCopy]]]].  	self riLogMsg:'  monomorphic (ms) ',(t1 asString), ' expected 13'.  	^t1 :SOURCE,type=instanceMethod,class=RtBenchmarks,selector=testLoopMutable,codeType=rtalktestLoopMutable                "<modified:pgmr=mdr,time=06/02/16 at 11:45:41 am>   "         "comment"                 | bytes pos sum time times|             	times := Array new:10.                 bytes := ByteArray new:1000000.             	self riLogMsg:'Starting Loop with mutable ints'.                 1 to:10 do:[ :i |                     times at:i put:(Time nanosecondsToRun:[self supportLoopMutable:bytes])].             	time := (self minTime:times) / 1000000.0.             	self riLogMsg:'  Time (ms) ',(time asString), ' expected 11'.                 ^time :SOURCE,type=instanceMethod,class=RtBenchmarks,selector=testGuruParse,codeType=rtalktestGuruParse                 "<modified:pgmr=mdr,time=06/02/16 at 11:51:34 am>   "         "gets a good sized object and parses it"                 | gf rtn attr tmp t1 t2 t3 t4|                     attr := RiGuru newSelector.                     attr class:'RiPackage' format:'cff'.                     attr title:'RTALK Base Classes'.             	self riLogMsg:'Starting Guru Parse Test'.                 t1 := Time millisecondsToRun:[                     gf := RiGuru openObject: attr.                     (gf isNil not and:[ gf isEmpty not])                      ifFalse:[^0]].             	self riLogMsg:'  Open Object Time (ms) ',(t1 asString).                 t2 := Time millisecondsToRun:[                     tmp := (RtCffFile on:gf) generateParagraphTree].             	self riLogMsg:'  Parse Time (ms) ',(t2 asString), ' expected 280'.                 t3 := Time millisecondsToRun:[ tmp convertAllToMultilines].             	self riLogMsg:'  Convert Time (ms) ',(t3 asString), ' expected 465'.                ^t2 + t3 :SOURCE,type=instanceMethod,class=RtBenchmarks,selector=testFib,codeType=rtalktestFib                "<modified:pgmr=mdr,time=06/02/16 at 11:49:37 am>   "         "time this one"             	| time times |             	self riLogMsg:'Starting FIB 35'.             	times := Array new:10.                 1 to:10 do:[ :i |                     times at:i put:(Time millisecondsToRun:[self supportFib:35])].             	time := (self minTime:times).             	self riLogMsg:'  Time (ms) ',(time asString), ' expected 320'.             	self riLogMsg:'Starting Fib 40'.                 time := Time millisecondsToRun:[self supportFib:40].             	self riLogMsg:'  Time (ms) ',(time asString), ' expected 4000'.           	^time :SOURCE,type=instanceMethod,class=RtBenchmarks,selector=testHanoi,codeType=rtalktestHanoi                "<modified:pgmr=mdr,time=06/02/16 at 11:46:58 am>   "         "time this one"             	| time times |             	times := Array new:10.             	self riLogMsg:'Starting RTALK Hanoi 25'.                 1 to:10 do:[ :i |                     times at:i put:(Time millisecondsToRun:[self supportHanoiMove: 25 from: 1 to: 2 temp: 3])].             	time := (self minTime:times).             	self riLogMsg:'  Time (ms) ',(time asString), ' expected 340'.                 ^time :SOURCE,type=instanceMethod,class=RtBenchmarks,selector=testLoop,codeType=rtalktestLoop                "<modified:pgmr=mdr,time=06/02/16 at 11:45:19 am>   "         "comment"                 | bytes pos sum time times|                 bytes := ByteArray new:1000000.             	times := Array new:10.             	self riLogMsg:'Starting Integer Loop'.                 1 to:10 do:[ :i |                     times at:i put:(Time nanosecondsToRun:[self supportLoop:bytes])].             	time := (self minTime:times) / 1000000.0.             	self riLogMsg:'  Time (ms) ',(time asString) , ' expected 11'.             ^time :SOURCE,type=instanceMethod,class=RtBenchmarks,selector=supportLoopMutable:,codeType=rtalksupportLoopMutable:aByteArray                "<modified:sys=GAKRE8CA,time=05/10/12 at 01:33:17 pm>   "                "<modified:sys=GAKRE8CA,time=02/02/12 at 02:40:30 pm>   "                "<modified:sys=GAKRE8CA,time=01/30/12 at 07:43:44 pm>   "                "<modified:sys=GAKRE8CA,time=01/30/12 at 11:15:48 am>   "                     "takes about 7-9ms"                 | bytes pos sum |                 bytes := aByteArray.                 sum := 0.                 pos := 1 newMutable.                 [pos <= 1000000]    whileTrue:[                     sum := bytes at:pos.                     pos increment:1].                 ^sum            :SOURCE,type=instanceMethod,class=RtBenchmarks,selector=minTime:,codeType=rtalkminTime:aArray                "<modified:pgmr=mdr,time=09/17/12 at 10:28:06 am>   "                     "find the smallest number in the array"                 | min |             	min := aArray at:1.             	aArray do:[ :e | e < min ifTrue:[ min := e]].             	^min            :SOURCE,type=instanceMethod,class=RtBenchmarks,selector=testPolymorphic,codeType=rtalktestPolymorphic     "<modified:pgmr=mdr,time=06/02/16 at 11:46:11 am>   "         "tests the speed of polymorphic sends"      | array t1|  	array := Array new:100.  	1 to:100 by:4 do:[ :i |   		array at:i put:(Array with:'foobar' with:nil).  		array at:(i + 1) put:(Array with:#foobar with:nil).		  		array at:(i + 2) put:(Array with:1000 with:nil).  		array at:(i + 3) put:(Array with:1000.0 with:nil).  	].  	self riLogMsg:'Starting polymorphic test'.     	10 timesRepeat:[  	1 to:100  do:[ :i |   		((array at:1) at:1) isNil  			ifFalse:[(array at:1) at:2 put:((array at:1) at:1)deepCopy]]].              	t1 := Time millisecondsToRun:[  	100 timesRepeat:[  	1 to:100  do:[ :i |   		((array at:1) at:1) isNil  			ifFalse:[(array at:1) at:2 put:((array at:1) at:1)deepCopy]]]].  	self riLogMsg:'  Polymorphic (ms) ',(t1 asString), ' expected 13'. 	^t1 :SOURCE,type=instanceMethod,class=RtBenchmarks,selector=testJavaHanoi,codeType=rtalktestJavaHanoi                "<modified:pgmr=mdr,time=06/02/16 at 11:44:48 am>   "         "time 11th one"             	| time times |                          	times := Array new:10.             	self riLogMsg:'Starting Java Hanoi 25 10X'.                 1 to:10 do:[ :i |                     times at:i put:(Time millisecondsToRun:[self supportJavaHanoi: 25])].             	time := (self minTime:times).             	self riLogMsg:'  Time (ms) ',(time asString), ' expected 235'.                 ^time :CHECKSUM3664748^0000